apiVersion: v1
kind: ConfigMap
metadata:
  name: catalogue-config
data:
  config.json: |
    {
      "app_version": "1.0.0",
      "data_source": "db"
    }
  db-config.properties: |
    db_name=catalogue
    db_host=catalogue-db.your-rds-endpoint.region.rds.amazonaws.com
---
apiVersion: v1
kind: Secret
metadata:
  name: catalogue-db-secrets
type: Opaque
data:
  # Base64 encoded values - replace with actual encoded values
  db_user: ZGV2b3Bz    # 'devops' in base64
  db_password: ZGV2b3Bz # 'devops' in base64
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: catalogue-service
  labels:
    app: catalogue-service
spec:
  replicas: 2
  selector:
    matchLabels:
      app: catalogue-service
  template:
    metadata:
      labels:
        app: catalogue-service
    spec:
      initContainers:
      - name: init-db-credentials
        image: amazon/aws-cli:latest
        command:
        - /bin/sh
        - -c
        - |
          aws secretsmanager get-secret-value --secret-id catalogue-db-credentials --region us-east-1 --query SecretString --output text > /tmp/secrets/db-credentials.json
          cat /tmp/secrets/db-credentials.json | jq -r '.username' > /tmp/secrets/db_user
          cat /tmp/secrets/db-credentials.json | jq -r '.password' > /tmp/secrets/db_password
          cat /tmp/secrets/db-credentials.json | jq -r '.host' > /tmp/secrets/db_host
        volumeMounts:
        - name: secrets-store
          mountPath: /tmp/secrets
        env:
        - name: AWS_REGION
          value: "us-east-1"
      containers:
      - name: catalogue-service
        image: catalogue-service:1.0.0
        ports:
        - containerPort: 5000
        env:
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: catalogue-db-secrets
              key: db_user
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: catalogue-db-secrets
              key: db_password
        - name: APP_VERSION
          valueFrom:
            configMapKeyRef:
              name: catalogue-config
              key: app_version
        volumeMounts:
        - name: config-volume
          mountPath: /app/config.json
          subPath: config.json
        - name: db-config-volume
          mountPath: /app/db-config
        - name: secrets-store
          mountPath: /app/secrets
          readOnly: true
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: config-volume
        configMap:
          name: catalogue-config
          items:
          - key: config.json
            path: config.json
      - name: db-config-volume
        configMap:
          name: catalogue-config
          items:
          - key: db-config.properties
            path: db-config.properties
      - name: secrets-store
        emptyDir:
          medium: Memory
---
apiVersion: v1
kind: Service
metadata:
  name: catalogue
spec:
  selector:
    app: catalogue-service
  ports:
  - port: 5000
    targetPort: 5000
  type: ClusterIP